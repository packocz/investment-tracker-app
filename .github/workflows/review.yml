name: Review
on:
    workflow_dispatch:
    pull_request:
        types: [opened, synchronize, reopened]
        branches: [main]
jobs:
    review:
        name: ReviewSource
        runs-on: 'ubuntu-latest'
        steps:
            - name: Clone Repository (Latest)
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.inputs.ref }}

            - name: Fetch main branch
              run: |
                  git fetch origin ${{ github.base_ref }}
                  git fetch origin ${{ github.head_ref }}

            - name: Do git diff
              id: getdiff
              run: echo "::set-output name=difflist::$(git diff --name-only --diff-filter=MCRA $(git merge-base --fork-point origin/${{ github.base_ref }} origin/${{ github.head_ref }})..origin/${{ github.head_ref }} invest-app/**/* | paste -sd "," -)"

            - name: Install Salesforce CLI
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
                  mkdir sfdx-cli
                  tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
                  ./sfdx-cli/install

            - name: 'Install Scanner'
              run: sfdx plugins:install @salesforce/sfdx-scanner

            - name: 'Run Scanner'
              run: sfdx scanner:run -t "${{ steps.getdiff.outputs.difflist }}" -f csv > report.csv

            - name: 'Convert report to json'
              run: cat report.csv | python -c 'import csv, json, sys; print(json.dumps([dict(r) for r in csv.DictReader(sys.stdin)]))' > report.json

            - name: 'Transform report to review comments'
              run: |
                  echo "`jq -c 'map({path: (.File | split("${{ github.event.repository.name }}/")[2]), position: .Line, severity: .Severity, body: (.Description + " (" + .Engine + " - " + .Rule + " - " + "Severity: " + .Severity + ")")})' report.json`" > comments.json

            - name: 'Find Git Diff lines'
              run: |
                  ./scripts/bash/git-diff-changed-lines.sh origin/${{ github.base_ref }}..origin/${{ github.head_ref }} > diffLines.txt

            - name: 'Translate Line to Position, filter issues outside diff and Evaluate Approval'
              run: |
                  node ./scripts/node/lines.js diffLines.txt comments.json 3 1
            # Severity 3 = REQUEST_CHANGES, SEVERITY 1 = APPROVE else COMMENT

            - name: Read Comments File
              id: getcomments
              run: echo "::set-output name=comments::$(cat comments.json)"

            - name: Read Review Event File
              id: getevent
              run: echo "::set-output name=event::$(cat reviewEvent.txt)"

            - name: Read Review Body File
              id: getbody
              run: echo "::set-output name=body::$(cat reviewbody.txt)"

            - name: 'Create Review'
              uses: octokit/request-action@v2.x
              with:
                  route: POST /repos/{repo}/pulls/{pull_number}/reviews
                  repo: ${{ github.repository }}
                  pull_number: ${{ github.event.number }}
                  body: '${{ steps.getcomments.outputs.body }}'
                  event: '${{ steps.getevent.outputs.event }}'
                  comments: '${{ steps.getbody.outputs.comments }}'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
